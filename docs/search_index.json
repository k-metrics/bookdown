[["introduction.html", "Chapter 1: Introduction", " Chapter 1: Introduction データ分析を行うためには適切な分析ツールが必要不可欠です。 R は統計計算に特化しているオープンソースの言語でデータ分析に最適なツールのひとつです。R がデータ分析に向いている理由をまとめているのが “Six Reasons To Learn R For Business”, R Blogger です。 R Has The Best Overall Qualities R Is Data Science For Non-Computer Scientists Learning R Is Easy With The Tidyverse R Has Brains, Muscle, And Heart R Is Built For Business R Community Support R はデータ分析に必要となるデータのハンドリングや可視化、モデリング、そして、レポーティングといった様々な機能を無料で利用することができます。また、R は逐次実行のインタプリタ型言語ですのでソフトウェアメトリクス分析のような探索的分析（Exploratory data analysis）に適していると言えます。さらに、非常にフレンドリーかつ活発なコミュニティーが日本でも形成されていますので、悩んだ時などに気軽に質問・相談ができるのも大きな強みです。 "],["how-to-analize.html", "1.1 How to analize", " 1.1 How to analize 分析対象のデータがどのようなものかを知ることは、データ分析を行うにあたって重要なことです。どのような分布なのか、どのような値の範囲なのか、全てのデータが揃っているのかなど俯瞰して把握します。 1.1.1 Visualize データを俯瞰するためには可視化（Visualize）が分かりやすい手法の一つです。例えば、時系列データであれば折線グラフを用いるのが一般的です。 計量値であれば棒グラフを用いて分布を確認したり、 二つの変量の関係を散布図で確認したりします。 1.1.2 Visualize → Transform 可視化して確認したデータに対して適切な変換（Transform）を行うことで、さらにデータの傾向を把握できることがあります。例えば 時系列データに対する移動平均を求める 計量データに対して要約統計量を求める 計量データに対して度数分布を求める with(iris, tapply(Sepal.Width, Species, fivenum)) ## $setosa ## [1] 2.3 3.2 3.4 3.7 4.4 ## ## $versicolor ## [1] 2.0 2.5 2.8 3.0 3.4 ## ## $virginica ## [1] 2.2 2.8 3.0 3.2 3.8 with(iris, tapply(Sepal.Length, Species, fivenum)) ## $setosa ## [1] 4.3 4.8 5.0 5.2 5.8 ## ## $versicolor ## [1] 4.9 5.6 5.9 6.3 7.0 ## ## $virginica ## [1] 4.9 6.2 6.5 6.9 7.9 with(iris, hist(Sepal.Width, plot = FALSE))$count ## [1] 4 7 13 23 36 24 18 10 9 3 2 1 1.1.3 Visualize → Transform → Visualize 求めた要約統計量を可視化することでよりデータを把握しやすくなります。例えば前項で求めた五数要約を可視化するには箱ひげ図を用います。 with(iris, boxplot(Sepal.Width ~ Species, plot = TRUE, main = &quot;Boxplot of Sepal.Width&quot;)) with(iris, boxplot(Sepal.Length ~ Species, plot = TRUE, main = &quot;Boxplot of Sepal.Width&quot;)) 度数分布を可視化するには文字通りヒストグラムを用います。 with(iris, hist(Sepal.Width, plot = TRUE)) つまり、データの把握とは可視化（Visualize）と変換（Transform）の繰り返し作業と言えます。 Visualize ←→ Transform → Model Visualize ←→ Transform ←→ Model （Visualize ←→ Transform ←→ Model）→ Communicate Tidy →（Visualize ←→ Transform ←→ Model）→ Communicate Import → Tidy →（Visualize ←→ Transform ←→ Model）→ Communicate Program（Import → Tidy →（Visualize ←→ Transform ←→ Model）→ Communicate） "],["data-science-workflow.html", "1.2 Data Science Workflow", " 1.2 Data Science Workflow データ分析の方法は様々ですが、そのプロセスは下図のように抽象化することができます。 Fig 1.1: Data Science Workflow, CC BY-NC-ND 3.0 US, Hadley Wickham この図は「Data Science Workflow」と呼ばれ、R コミュニティに多大な貢献をしている Hadley Wickham がその著書 『R for Data Science』 で提唱している概念図です。本書は、この Data Science Workflow に基づくページ構成になっており各プロセスのスコープ概略は下記の通りです。 Program データ分析のすべてのプロセス（Tidy 〜 Communicate/Automate）で必要となるツールがプログラミングです。プログラミングを覚えることで効率的に分析処理を行えるようになります。 Import 分析対象となるデータを分析環境に取り込み分析をできるようにするのがインポートプロセスです。データは様々な形式（文字コード、ファイル形式など）で保存されていますので、それらに見合った方法でインポートする必要があります。 Tidy インポートしたデータは必ずしもデータ分析に適した形式になっているとは限りませんので、一貫した形式（Tidy data）に整理します。 Tidy data はデータ分析において重要な概念です。 Transform 整理したデータ（Tidy data）がそのまま状態でデータ分析に使えることは稀です。不要なデータを削除したり（クレンジング）、必要なデータだけに絞り込んだり、新しい変数を計算したりする必要があります。 Tidy プロセスと合わせて Wrangle や Data wrangling、前処理と呼ばれることもあります。 Visualize データを可視化することは様々な示唆を得ることと同義といえます。分析方針を考えるためにもデータがどういう傾向をもっているのかを把握するためのプロセスともいえます。 Model 可視化で得られた情報を元に数式可（モデル化）するのプロセスです。モデルは様々な Communicate 分析結果を他人に伝えるためのプロセスです。結果を他人に伝えるだけでは不十分で 再現可能性（Reproducible research） が伴っていることも求められます。 3つの再現可能性 "]]
